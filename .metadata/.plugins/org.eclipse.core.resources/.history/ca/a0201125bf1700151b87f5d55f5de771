package com.callsystem.controllers;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.callsystem.dao.PessoaDAO;
import com.callsystem.dao.RamalDAO;
import com.callsystem.model.PessoaVO;
import com.callsystem.model.RamalVO;

@Controller
public class RamaisController {

	@RequestMapping(value = "/cadastrarRamal/{idUsuario}", method = RequestMethod.GET)
	public String cadastrarRamal(@PathVariable(value="idUsuario") int id) {
		System.out.println(id);
		return "cadastrarRamais";
	}
	
	@RequestMapping(value = "/cadastrarRamal/{idUsuario}", method = RequestMethod.POST)
	public String cadastrarRamal(@ModelAttribute("ramal") RamalVO ramal) {
		try {
			if(ramal.getNumero() != null && ramal.getPessoa().getId() != 0){
				RamalDAO dao = new RamalDAO();
				dao.cadastrar(ramal);
			}
			return "cadastrarRamais";
			
		} catch (Exception e) {
			System.out.println(e.getMessage());
			return "redirect:listarRamais";
		}
	}
	
	@RequestMapping(value = "/deletarRamal/{IdRamal}", method = RequestMethod.GET)
	public String deletarRamal(@PathVariable(value="IdRamal") int id) {
		RamalDAO dao = new RamalDAO();
		try {
			if(id != 0){
				dao.deletar(id);
			}
			
			return "redirect:callsystem/listarUsuarios";
		} catch (Exception e) {
			System.out.println(e.getMessage());
			return "redirect:callsystem/listarUsuarios";
		} 
	}
	

	@RequestMapping(value = "/relatorioItensCadastrados", method = RequestMethod.GET)
	public ModelAndView listarRamais() {
		try {
			List<Object> retorno =null;
			List<RamalVO> ramais = null;
			List<PessoaVO> pessoas = new PessoaDAO().listar();
			ramais = new RamalDAO().listar();
			for (RamalVO ramalVO : ramais) {
				for (PessoaVO pessoa : pessoas) {
					if (ramalVO.getPessoa().getId() == pessoa.getId()) {
						ramalVO.setPessoa(pessoa);
					}
				}
			}
			ModelAndView model = new ModelAndView("listarUsuarios");
			if (ramais.size() == 0) {
				ramais =  new ArrayList<RamalVO>();
				
				for (PessoaVO pessoaVO : pessoas) {
					RamalVO ramal = new RamalVO();
					ramal.setNumero("0");
					ramal.setId(0);
					ramal.setPessoa(pessoaVO);
					ramais.add(ramal);
				}
				
			}
			model.addObject("ramais", ramais);
			

			return model;
			
		} catch (Exception e) {
			System.out.println(e.getMessage());
			return null;
		}
	}
	
}
